1、锚定 例：^cat不要理解为以cat开头的行，正确理解应为c作为一行第一个字符，紧接着a,紧接着t的文本
^cat$   文字意义：匹配的条件是，行开头，然后是字母c*a*t，然后是行末尾
	应用意义：只包含cat的行――没有多余的单词，空白字符……只有‘cat’.

^$	文字意义：匹配的条件是，行开头，然后是行末尾
	应用意义：空行（没有任何字符，包括空白字符）

^	文字意义：匹配条件是行开头
	应用意义：无意义！因为每一行都有开头，所以每一行都能匹配――空行也不例外

排除字符组：
用[^……]取代[……],这个字符组就会匹配任何未列出的字符。例如：[^1-6]；匹配除了1到6以外的任何字符。
这个字符组中的开头^，表示排除，所以这里列出的不是希望匹配的字符，而是不希望匹配的字符。

场景：我们需要在一堆引文单词中搜索出一些特殊的单词。在这些单词中，字母q后面的字母不是u,在桌面新建一个test.txt的文档，文档中插入Iraqi
Iraqian
quation
qasida
Iraq
Qantas
tasq
，打开CMD命令输入findstr "[Qq][^u]" C:\Users\YF\Desktop\test.txt 命令即可查找到匹配的文本信息


用点好来匹配任意字符：
例如：我们要搜索03/19/76 或者03.19.76，不怕麻烦的话用一个明确容许'/'、'-'、'.'的字符来构建正则表达式。例如：03[-./]19[-./]76。也可以简单的尝试03.19.76


多选结构：
匹配任意子表达式：
| 是一个非常简捷的元字符，他的意思是“或”。假如 Bob和Robert是两个表达式，但Bob|Robert就能同时匹配其中任意一个的正则表达式。这样的组合中，子表达式称为“多选分支”

忽略大小写：
egrep的命令行参数“-i”表示进行忽略大小写的匹配，把-i写在正则表达式之前：
 % egrep -i '^(From|Subject|Date):' mailbox